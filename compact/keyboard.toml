[keyboard]
name = "compact"
product_name = "compact"
vendor_id = 0x4c4b
product_id = 0x4643
manufacturer = "rmk"
chip = "rp2040"

[matrix]
# Input and output pins are mandatory
input_pins = ["PIN_2", "PIN_3", "PIN_4", "PIN_5", "PIN_6"]
output_pins = ["PIN_16", "PIN_17", "PIN_18", "PIN_19", "PIN_20", "PIN_21", "PIN_7", "PIN_8", "PIN_9", "PIN_10", "PIN_11", "PIN_12", "PIN_13", "PIN_14", "PIN_15"]
# row2col = false

[aliases]
"~"="WM(Grave, LShift)"
"`"="Grave"
"!"="WM(Kc1, LShift)"
"@"="WM(Kc2, LShift)"
"#"="WM(Kc3, LShift)"
"$"="WM(Kc4, LShift)"
"%"="WM(Kc5, LShift)"
"^"="WM(Kc6, LShift)"
"&"="WM(Kc7, LShift)"
"*"="WM(Kc8, LShift)"
"("="WM(Kc9, LShift)"
")"="WM(Kc0, LShift)"
"-"="Minus"
"_"="WM(Minus, LShift)"
"="="Equal"
"+"="WM(Equal, LShift)"
"["="LeftBracket"
"{"="WM(LeftBracket, LShift)"
"]"="RightBracket"
"}"="WM(RightBracket, LShift)"
"\\"="Backslash"
"|"="WM(Backslash, LShift)"
";"="Semicolon"
":"="WM(Semicolon, LShift)"
"'"="WM(Quote, LShift)"
"\""="WM(Quote, LShift)"
","="Comma"
"<"="WM(Comma, LShift)"
"."="Dot"
">"="WM(Dot, LShift)"
"/"="Slash"
"?"="WM(Slash, LShift)"

"h~"="WM(Kc1, RAlt)"
"h`"="WM(Kc7, RAlt)"
"h!"="WM(Kc4, LShift)"
"h@"="WM(V, RAlt)"
"h#"="WM(X, RAlt)"
"h$"="WM(Semicolon, RAlt)"
"h%"="WM(Kc5, LShift)"
"h^"="WM(Kc3, RAlt)"
"h&"="WM(C, RAlt)"
"h*"="WM(Slash, RAlt)"
"h("="WM(Kc8, LShift)"
"h)"="WM(Kc9, LShift)"
"h-"="Slash"
"h_"="WM(Slash, LShift)"
"h="="WM(Kc7, LShift)"
"h+"="WM(Kc3, LShift)"
"h["="WM(F, RAlt)"
"h{"="WM(B, RAlt)"
"h]"="WM(G, RAlt)"
"h}"="WM(N, RAlt)"
"h\\"="WM(Q, RAlt)"
"h|"="WM(W, RAlt)"
"h;"="WM(Comma, RAlt)"
"h:"="WM(Dot, LShift)"
"h'"="WM(Kc1, LShift)"
"h\""="WM(Kc2, LShift)"
"h,"="Comma"
"h<"="WM(NonusBackslash, RAlt)"
"h."="Dot"
"h>"="WM(Y, RAlt)"
"h/"="WM(Kc6, LShift)"
"h?"="WM(Comma, LShift)"

"í"="Grave"
"ö"="Kc0"
"ü"="Minus"
"ó"="Equal" 
"ő"="LeftBracket"
"ú"="RightBracket"
"ű"="Backslash"
"é"="Semicolon"
"á"="Quote"

cut="WM(X, LCtrl)"
copy="WM(C, LCtrl)"
paste="WM(V, LCtrl)"
paste_noformat="WM(V, LCtrl|LShift)"
find="WM(F, LCtrl)"
replace="WM(H, LCtrl)"
undo="WM(Z, LCtrl)"
redo="WM(Y, LCtrl)"

[layout]
rows = 5
cols = 15
layers = 8
matrix_map = """
    (0, 0)  (0, 1)  (0, 2)  (0, 3)  (0, 4)  (0, 5)    (0, 6)  (0, 7)  (0, 8)  (0, 9)  (0, 10) (0, 11)         (0, 12)  (0, 13)  (0, 14)
(1, 0)     (1, 1)  (1, 2)  (1, 3)  (1, 4)  (1, 5)      (1, 6)  (1, 7)  (1, 8)  (1, 9)  (1, 10)     (1, 11)    (1, 12)  (1, 13)  (1, 14) 
(2, 0)    (2, 1)  (2, 2)  (2, 3)  (2, 4)  (2, 5)        (2, 6)  (2, 7)  (2, 8)  (2, 9)  (2, 10)    (2, 11)
(3, 0)   (3, 1)  (3, 2)  (3, 3)  (3, 4)  (3, 5)          (3, 6)  (3, 7)  (3, 8)  (3, 9)  (3, 10)   (3, 11)             (3, 13)
(4, 0)  (4, 1)  (4, 2)  (4, 3)  (4, 4)  (4, 5)            (4, 6)  (4, 7)  (4, 8)  (4, 9)  (4, 10)  (4, 11)    (4, 12)  (4, 13)  (4, 14)
"""
# keymap = [
#     [
#         ["Escape", "No", "F1", "F2", "F3", "F4", "F5", "F6", "F7", "F8", "F9", "F10", "F11", "F12", "PrintScreen", "ScrollLock", "Pause"],
#         ["Grave", "Kc1", "Kc2", "Kc3", "Kc4", "Kc5", "Kc6", "Kc7", "Kc8", "Kc9", "Kc0", "Minus", "Equal", "Backspace", "Insert", "Home", "PageUp"],
#         ["Tab", "Q", "W", "E", "R", "T", "Y", "U", "I", "O", "P", "LeftBracket", "RightBracket", "Backslash", "Delete", "End", "PageDown"],
#         ["MO(3)", "A", "S", "D", "F", "G", "H", "J", "K", "L", "Semicolon", "Quote", "No", "Enter", "No", "No", "No"],
#         ["LShift", "No", "Z", "X", "C", "V", "B", "N", "M", "Comma", "Dot", "Slash", "No", "RShift", "No", "UP", "No"],
#         ["LCtrl", "LGui", "LAlt",  "No", "No", "No", "Space", "No", "No", "No","RAlt", "MO(3)", "Application", "RCtrl", "Left", "Down", "Right"],
#         ["KpDot", "Kp1", "Kp2", "Kp3", "Kp4", "Kp5", "Kp6", "Kp7", "Kp8", "Kp9", "Kp0", "KpMinus", "KpPlus", "KpEnter", "KpAsterisk", "KpSlash", "NumLock"],
#     ],
#     [
#         ["_","No","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_"],
#         ["_","F14","F15","F16","F17","_","F18","F19","F20","F21","_","_","_","_","_","_","_"],
#         ["_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_"],
#         ["_","_","_","_","_","_","_","_","_","_","_","_","No","_","No","No","No"],
#         ["_","No","_","_","_","_","_","_","_","F22","F23","F24","No","_","No","_","No"],
#         ["_","_","_","No","No","No","_","No","No","No","_","_","_","_","_","_","_"],
#         ["_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_"],
#     ],
#     [
#         ["_","No","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_"],
#         ["_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_"],
#         ["_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_"],
#         ["_","_","_","_","_","_","_","_","_","_","_","_","No","_","No","No","No"],
#         ["_","No","_","_","_","_","_","_","_","_","_","_","No","_","No","_","No"],
#         ["_","_","_","No","No","No","_","No","No","No","_","_","_","_","_","_","_"],
#         ["_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_"],
#     ],
#     [
#         ["_","No","_","AudioVolDown","AudioVolUp","AudioMute","MediaStop","MediaPrevTrack","MediaPlayPause","MediaNextTrack","Mail","WwwHome","MyComputer","Calculator","TG(1)","TG(2)","TG(3)"],
#         ["User1","_","_","_","_","_","_","_","_","_","F13","_","_","_","WwwForward","BrightnessUp","AudioVolUp"],
#         ["_","_","_","_","_","_","_","_","_","_","_","_","_","_","WwwBack","BrightnessDown","AudioVolDown"],
#         ["CapsLock","_","_","_","_","_","_","_","_","_","_","_","No","_","No","No","No"],
#         ["_","No","_","_","_","_","_","_","_","_","_","_","No","_","No","MouseWheelUp","No"],
#         ["_","_","_","No","No","No","_","No","No","No","_","_","_","_","MouseWheelLeft","MouseWheelDown","MouseWheelRight"],
#         ["MouseBtn2","MouseWheelLeft","MouseDown","MouseWheelRight","MouseLeft","MouseBtn3","MouseRight","MouseBtn1","MouseUp","MouseBtn2","MouseBtn1","_","MouseWheelUp","MouseWheelDown","_","_","_"],
#     ]
# ]

[[layer]]
name = "default" #0
keys = """
         F1  F2  F3  F4  F5  F6         F7  F8  F9  F10 F11 F12                Insert   Home   PageUp
Tab          Q   W   E   R   T            Y   U   I   O   P  Backspace         Delete   End    PageDown
MO(sym)     A   S   D   F   G              H   J   K   L  @; Enter
LShift     Z   X   C   V   B                N   M  @,  @. @/ RShift                     UP
LCtrl LGui LAlt Esc Space Tab   Enter Backspace Delete RAlt MO(scroll) RCtrl   Left     Down   Right
"""

[[layer]]
name = "my" #0
keys = """
         F1  F2  F3  F4  F5  F6         F7  F8  F9  F10 F11 F12                Insert   Home   PageUp
Tab          G   Y   M   R   B            F   Z   O   U  @;   Backspace        Delete   End    PageDown
MO(sym)     K   S   T   L   V              J   N   A   E   I  Enter
LShift     W   D   P   H   Q                X   C  @,  @=  @. RShift                     UP
LCtrl LGui LAlt Esc Space Tab   Enter Backspace Delete RAlt MO(scroll) RCtrl   Left     Down   Right
"""

[[layer]]
name = "hun" #0
keys = """
         Esc  @ű  @ú  @í  @ó  _          _  @á  @ö  @ü  @ő  _                 Insert   Home   PageUp
Tab          G   Y   M   R   B            F   Z   O   U  @h;  Backspace       Delete   End    PageDown
MO(hsym)    K   S   T   L   V              J   N   A   E   I  Enter
LShift     W   D   P   H   Q                X   C  @h,  @é  @h. RShift                  UP
LCtrl LGui LAlt Esc Space Tab   Enter Backspace Delete RAlt MO(hscroll) RCtrl  Left     Down   Right
"""

[[layer]]
name = "sym" #1
keys = """
  CapsLock NumLock ScrollLock AudioMute AudioVolDown AudioVolUp         BrightnessDown BrightnessUp WwwBack WwwForward PrintScreen Pause     Kp7   Kp8   Kp9
Tab          @`  @^  @&  @|  @~           @!  @'  @{  @}   @/  Backspace       Kp4   Kp5   Kp6
MO(default) @_  @<  @=  @>  @\\            @-  @"  @(  @)   @*     Enter
LShift     @@  @#  @$  @%  @*               @?  @:  @[  @]   @+    RShift            Kp0
LCtrl LGui LAlt Esc Space Tab   Enter Backspace Delete RAlt MO(default) RCtrl  Kp1   Kp2   Kp3
"""

[[layer]]
name = "scroll" #2
keys = """
         Kc1 Kc2 Kc3 Kc4 Kc5 Kc6         Kc7 Kc8 Kc9 Kc0 PrintScreen Pause     WwwForward   @redo   TG(my)
Tab          @`  @^  @&  @|  @~           @!  @'  @{  @}   @/  Backspace       WwwBack      @undo   TG(hun)
MO(default) @_  @<  @=  @>  @\\            @-  @"  @(  @)   @*     Enter
LShift     @@  @#  @$  @%  @*               @?  @:  @[  @]   @+    RShift                     MouseWheelUp
LCtrl LGui LAlt Esc Space Tab   Enter Backspace Delete RAlt MO(default) RCtrl  MouseWheelLeft MouseWheelDown MouseWheelRight
"""

[[layer]]
name = "hsym" #1
keys = """
  CapsLock NumLock ScrollLock AudioMute AudioVolDown AudioVolUp         BrightnessDown BrightnessUp WwwBack WwwForward PrintScreen Pause     Kp7   Kp8   Kp9
Tab          @h`  @h^  @h&  @h|  @h~           @h!  @h'  @h{  @h}   @h/  Backspace       Kp4   Kp5   Kp6
MO(default) @h_  @h<  @h=  @h>  @h\\            @h-  @h"  @h(  @h)   @h*     Enter
LShift     @h@  @h#  @h$  @h%  @h*               @h?  @h:  @h[  @h]   @h+   RShift             Kp0
LCtrl LGui LAlt Esc Space Tab   Enter Backspace Delete RAlt MO(default) RCtrl            Kp1   Kp2   Kp3
"""

[[layer]]
name = "hscroll" #2
keys = """
         Kc1 Kc2 Kc3 Kc4 Kc5 Kc6         Kc7 Kc8 Kc9 Kc0 PrintScreen Pause              WwwForward   @redo   TG(my)
Tab          @h`  @h^  @h&  @h|  @h~           @h!  @h'  @h{  @h}   @h/  Backspace      WwwBack      @undo   TG(default)
MO(default) @h_  @h<  @h=  @h>  @h\\            @h-  @h"  @h(  @h)   @h*     Enter
LShift     @h@  @h#  @h$  @h%  @h*               @h?  @h:  @h[  @h]   @h+    RShift                     MouseWheelUp
LCtrl LGui LAlt Esc Space Tab   Enter Backspace Delete RAlt MO(default) RCtrl           MouseWheelLeft MouseWheelDown MouseWheelRight
"""


# [[layer]]
# name = "hun" #1
# keys = """
# _   _ _ _ _   _ _ _ _    _ _ _ _              _ _ _
# _ F14 F15 F16 F17 _ F18 F19 F20 F21 _ _ _ _   _ _ _    _  _  _  _ 
# _  _ _ _ _ _ _ _ _ _ _ _ _ _                  _ _ _    _  _  _  _
# _   _ _ _ _ _ _ _ _ _ _ _ _                            _  _  _ 
# _    _ _ _ _ _ _ _ F22 F23 F24 _                _      _  _  _  _
# _ _ _      _     LAlt _ _ _                   _ _ _     _    _ 
# """

# [[layer]]
# name = "media" #2
# keys = """
# _ _ AudioVolDown AudioVolUp AudioMute MediaStop MediaPrevTrack MediaPlayPause MediaNextTrack Mail WwwHome MyComputer Calculator     TG(hun) TG(media) TG(empty)
# User0 _ _ _ _ _ _ _ _ _ User1 User2 User3 _      WwwForward BrightnessUp   AudioVolUp           MouseBtn1      MouseBtn3 MouseBtn2       WwwHome
# _ _ _ _ _ _ _ _ _ _ _ User4 User5 User6          WwwBack    BrightnessDown AudioVolDown         WwwBack        MouseUp   WwwForward      MouseWheelUp
# CapsLock _ _ _ _ _ _ _ _ _ User7 User8 _                                                        MouseLeft      MouseDown MouseRight
# _   _ _ _ _ _ _ _ _ _ _   _                                 MouseWheelUp                        MouseWheelLeft MouseDown MouseWheelRight MouseWheelDown
# _ _ _     _     LAlt _ _ _                   MouseWheelLeft MouseWheelDown MouseWheelRight           MouseBtn1       MouseBtn2 
# """

# [[layer]]
# name = "empty" #2
# keys = """
# _  _ _ _ _  _ _ _ _  _ _ _ _   _ _ _
# _ _ _ _ _ _ _ _ _ _ _ _ _  _   _ _ _    _  _  _  _ 
# _  _ _ _ _ _ _ _ _ _ _ _ _ _   _ _ _    _  _  _  _
# _   _ _ _ _ _ _ _ _ _ _ _  _            _  _  _ 
# _    _ _ _ _ _ _ _ _ _ _   _     _      _  _  _  _  
# _ _ _        _       _ _ _ _   _ _ _     _   _ 
# """

[rmk]
# Mouse key interval (ms) - controls mouse movement speed
mouse_key_interval = 20
# Mouse wheel interval (ms) - controls scrolling speed
mouse_wheel_interval = 80
# Maximum number of combos keyboard can store
combo_max_num = 16
# Maximum number of keys pressed simultaneously in a combo
combo_max_length = 4
# Maximum number of forks for conditional key actions
fork_max_num = 32
# Macro space size in bytes for storing sequences. The maximum number of Macros depends on the size of each sequence: All sequences combined need to fit into macro_space_size, the number of macro sequences doesn't matter.
macro_space_size = 256
# Default debounce time in ms
debounce_time = 20
# Event channel size
event_channel_size = 16
# Report channel size
report_channel_size = 16
# Vial channel size
vial_channel_size = 4
# Flash channel size
flash_channel_size = 4

[light]
# All light pins are high-active by default, uncomment if you want it to be low-active
numslock.pin = "PIN_27"
numslock.low_active = true
capslock.pin = "PIN_28"
capslock.low_active = true
scrolllock.pin = "PIN_25"
scrolllock.low_active = false

[storage]
# Storage feature is enabled by default
#enabled = true

[behavior.combo]
timeout = "150ms"
combos = [
  { actions = ["Escape", "Tab"], output = "Macro0" }
]

[behavior]
tap_hold = { enable_hrm = true, prior_idle_time = "120ms", hold_timeout = "250ms", post_wait_time = "50ms"}

[behavior.fork]
forks = [
#   { trigger = "V", negative_output = "V", positive_output = "X", match_any = "NumLock|CapsLock|ScrollLock", bind = "false" },#does not work
#   { trigger = "X", negative_output = "X", positive_output = "V", match_any = "NumLock|CapsLock|ScrollLock", bind = "false" },#does not work
#   { trigger = "M", negative_output = "M", positive_output = "N", match_any = "MouseBtn5", bind = "false" },
#   { trigger = "N", negative_output = "N", positive_output = "M", match_any = "MouseBtn5", bind = "false" },
  
  # hun fixers:

  #F13
  
  # F14 1! on hun
  { trigger = "F14", negative_output = "Kc1", positive_output = "WM(Kc4, LShift)", match_any = "LShift|RShift" },
  # F15 2@ on hun
  { trigger = "F15", negative_output = "Kc2", positive_output = "WM(V, RAlt)", match_any = "LShift|RShift" },
  # F16 3# on hun  
  { trigger = "F16", negative_output = "Kc3", positive_output = "WM(X, RAlt)", match_any = "LShift|RShift" },
  # F17 4$ on hun
  { trigger = "F17", negative_output = "Kc4", positive_output = "WM(Semicolon, RAlt)", match_any = "LShift|RShift" },
  # F18 6^ on hun
  { trigger = "F18", negative_output = "Kc6", positive_output = "WM(Kc3, RAlt)", match_any = "LShift|RShift" },
  # F19 7& on hun
  { trigger = "F19", negative_output = "Kc7", positive_output = "WM(C, RAlt)", match_any = "LShift|RShift" },
  # F20 8* on hun
  { trigger = "F20", negative_output = "Kc8", positive_output = "WM(Slash, RAlt)", match_any = "LShift|RShift" },
  # F21 9( on hun
  { trigger = "F21", negative_output = "Kc9", positive_output = "WM(Kc8, LShift)", match_any = "LShift|RShift" },
  # F22 ,< on hun  
  { trigger = "F22", negative_output = "Comma", positive_output = "WM(NonusBackslash, RAlt)", match_any = "LShift|RShift" },
  # F23 .> on hun 
  { trigger = "F23", negative_output = "Dot", positive_output = "WM(Z, RAlt)", match_any = "LShift|RShift" },
  # F24 /? on hun
  { trigger = "F24", negative_output = "WM(Kc6, LShift)", positive_output = "WM(Comma, LShift)", match_any = "LShift|RShift" },

  # User0 `~ on hun
  { trigger = "User0", negative_output = "WM(Kc7, RAlt)", positive_output = "WM(Kc1, RAlt)", match_any = "LShift|RShift" },
  # User1 0) on hun (FnLayer)
  { trigger = "User1", negative_output = "Kp0", positive_output = "WM(Kc9, LShift)", match_any = "LShift|RShift" },
  # User2 -_ on hun
  { trigger = "User2", negative_output = "Slash", positive_output = "WM(Slash, RShift)", match_any = "LShift|RShift" },
  # User3 =+ on hun
  { trigger = "User3", negative_output = "WM(Kc7, RShift)", positive_output = "WM(Kc3, RShift)", match_any = "LShift|RShift" },

  # User4 [{ on hun
  { trigger = "User4", negative_output = "WM(F, RAlt)", positive_output = "WM(B, RAlt)", match_any = "LShift|RShift" },
  # User5 ]} on hun
  { trigger = "User5", negative_output = "WM(G, RAlt)", positive_output = "WM(N, RAlt)", match_any = "LShift|RShift" },
  # User6 \| on hun
  { trigger = "User6", negative_output = "WM(Q, RAlt)", positive_output = "WM(W, RAlt)", match_any = "LShift|RShift" },

  # User7 ;: on hun
  { trigger = "User7", negative_output = "WM(Comma, RAlt)", positive_output = "WM(Dot, RShift)", match_any = "LShift|RShift" },
  # User8 '" on hun
  { trigger = "User8", negative_output = "WM(Kc1, RShift)", positive_output = "WM(Kc2, RShift)", match_any = "LShift|RShift" },
]